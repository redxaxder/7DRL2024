class_name SkillName

const physical_adjectives = [
	"Piercing",
	"Jagged",
	"Spiky",
	"Pointed",
	"Lacerating",
	"Heavy",
	"Devastating",
	"Blunt",
	"Sharpened",
	"Razor-sharp",
	"Barbed",
	"Crushing",
	"Gigantic",
	"Smashing",
	"Indestructible",
	"Armored",
	"Invincible",
	"Thorned",
	"Hammered",
	"Scaled",
]

const fire_adjectives = [
	"Boiling",
	"Molten",
	"Fiery",
	"Red-hot",
	"Burning",
	"Searing",
	"Glowing",
	"Broiling",
	"Scalding",
	"Scorching",
	"Enflamed",
	"Seething",
	"Fuming",
	"Steaming",
	"Crackling",
	"Smoking",
	"Consuming",
]
const ice_adjectives = [
	"Frigid",
	"Numbing",
	"Bone-chilling",
	"Subzero",
	"Icy",
	"Glacial",
	"Frozen",
	"Freezing",
	"Arctic",
	"Fractal",
	"Gelid",
	"Inhospitable",
	"Cerulean",
	"Azure",
	"Sapphire"
]
const poison_adjectives = [
	"Poisonous",
	"Toxic",
	"Infectious",
	"Envenomed",
	"Malignant",
	"Volatile",
	"Deadly",
	"Virulent",
	"Injurious",
	"Potent",
	"Baleful",
	"Spiked",
	"Tainted",
	"Foul",
	"Contaminated",
	"Polluted",
]



const adjectives = [
	"Aphotic",
	"Draconic",
	"Modest",
	"Inscrutable",
	"Miraculous",
	"Hangman's",
	"Monster's",
	"Serpent's",
	"Devil's",
	"Burly",
	"Mastadon's",
	"Absolute",
	"Occasional",
	"Desperate",
	"Unlikely",
	"Inevitable",
	"Unstoppable",
	"Shocking",
	"Discount",
	"Enigmatic",
	"Mysterious",
	"Undeniable",
	"Unexpected",
	"Profound",
	"Overwhelming",
	"Unforeseen",
	"Refurbished",
	"Extraordinary",
	"Impending",
	"Improbable",
	"Incomprehensible",
	"Unbelievable",
	"Ethereal",
	"Sensational",
	"Mesmerizing",
	"Enchanting",
	"Transcendent",
	"Fascinating",
	"Spellbinding",
	"Radiant",
	"Prophylactic",
	"Serenading",
	"Harmonious",
	"Uplifting",
	"Whimsical",
	"Enduring",
	"Lingering",
	"Phantom",
	"Crimson",
	"Vivid",
	"Vintage",
	"Emerald",
	"Amber",
	"Indigo",
	"Scarlet",
	"Topaz",
	"Turquoise",
	"Ruby",
	"Inspired",
	"Insipid",
	"Spontaneous",
	"Explosive",
	"Sapphire",
	"Opalescent",
	"Sparkling",
	"Unassuming",
	"Opportunistic",
	"Silent",
	"Echoing",
	"Whispering",
	"Thundering",
	"Resplendent",
	"Shimmering",
	"Forgotten",
	"Lost",
	"Abandoned",
	"Haunted",
	"Decaying",
	"Desolate",
	"Neglected",
	"Ephemeral",
	"Eternal",
	"Sublight",
	"Ruined",
	"Umbral",
	"Derelict",
	"Deserted",
	"Unbecoming",
	"Accelerated",
	"Improved",
	"Faint",
	"Crescent",
	"Gibbous",
	"Tropic",
	"Partial",
	"Total",
	"Final",
	"Hybrid",
	"Lunar",
	"Solar",
	"Annular",
	"Micro",
	"Macro",
	"Terminal",
	"Ultimate",
	"Vitamin",
	"Singular",
	"Double",
	"Triple",
	"Quadruple",
	"Pristine",
	"Destined",
	"Belated",
	"Overdue",
	"Untimely",
	"Inopportune",
	"Defunct",
	"Tawdry",
	"Garish",
]

const trailers = [
	"of the World",
	"against Greed",
	"against Strength",
	"against God",
	"against Time",
	"against Hubris",
	"against Sloth",
	"against Envy",
	"against Weakness",
	"against Corruption",
	"against Evil",
	"of the Weasel",
	"of the Snake",
	"of the Hawk",
	"of the Fox",
	"of the Spider",
	"of the Scorpion",
	"of the Bear",
	"of the Tiger",
	"with Haste",
	"with Courage",
	"with Revenge",
	"with Rage",
	"with Resolve",
	"Beyond the Limit",
	"Turbo",
	"Deux",
	"Mark II",
	"for Great Justice",
]

const mains = [
	"Jewel",
	"Reach",
	"Assailment",
	"Beheading",
	"Strike",
	"Triumph",
	"Ultimatum",
	"Negotiation",
	"Negation",
	"Calling",
	"Redoubt",
	"Compromise",
	"Counteroffer",
	"Disgrace",
	"Dementia",
	"Slaughter",
	"Laughter",
	"Luck",
	"Misfortune",
	"Destiny",
	"Fate",
	"Exception",
	"Starvation",
	"Edge",
	"Tooth",
	"Flower",
	"Snow",
	"Snowflake",
	"Stone",
	"Tomorrow",
	"Assault",
	"Shout",
	"Glory",
	"Leap",
	"Fatigue",
	"Acedia",
	"Trap",
	"Anomie",
	"Ennui",
	"Harvest",
	"Resolve",
	"Determination",
	"Return",
	"Denoument",
	"Echo",
	"Whisper",
	"Chaos",
	"Solitude",
	"Revenge",
	"Tranquility",
	"Fury",
	"Echo",
	"Aplomb",
	"Harmony",
	"Mirage",
	"Fable",
	"Whirlwind",
	"Apsis",
	"Precession",
	"Transit",
	"Occultation",
	"Analemma",
	"Quadrature",
	"Neap",
	"Tide",
	"Riddle",
	"Mystique",
	"Silhouette",
	"Eclipse",
	"Equinox",
	"Solstice",
	"Apogee",
	"Syzygy",
	"Alignment",
	"Perigee",
	"Penumbra",
	"Aphelion",
	"Opposition",
	"Conjunction",
	"Vengeance",
	"Bliss",
	"Harbinger",
	"Paradox",
	"Nemesis",
	"Sunlight",
	"Twilight",
	"Resilience",
	"Obsidian",
	"Radiance",
	"Serendipity",
	"Labyrinth",
	"Catalyst",
	"Epoch",
	"Rapture",
	"Paragon",
	"Conundrum",
	"Apex",
	"Traversal",
	"Oblivion",
	"Apocalypse",
	"Vortex",
	"Elysium",
	"Ascendancy",
	"Opportunity",
	"Muscle",
	"Maneuver",
	"Body",
	"Training",
	"Exertion",
	"Blood",
	"Sun",
	"Moon",
	"Star",
	"Pulsar",
	"Quasar",
	"Nebula",
	"Pulchritude",
]

static func generate_name(element = null) -> String:
	var name: String = ""
	var num_adjectives = randi() % 2 + 1
	
	var available_adjectives = DataUtil.deep_dup(adjectives)
	var element_adjectives = []
	if(element != null):
		if(element == Elements.Kind.Physical):
			element_adjectives = DataUtil.deep_dup(physical_adjectives)
		elif(element == Elements.Kind.Fire):
			element_adjectives = DataUtil.deep_dup(fire_adjectives)
		elif(element == Elements.Kind.Ice):
			element_adjectives = DataUtil.deep_dup(ice_adjectives)
		elif(element == Elements.Kind.Poison):
			element_adjectives = DataUtil.deep_dup(poison_adjectives)
		
	available_adjectives.shuffle()	
	element_adjectives.shuffle()	
	var has_trailer: bool = randf() < 0.2
	for i in num_adjectives:
		if i==0 and element_adjectives.size() > 0 and (randf() <0.3) :
			name += element_adjectives.pop_front() + " "
		else:
			name += available_adjectives.pop_front() + " "
	name += mains[randi() % mains.size()]
	if has_trailer:
		name += " " + trailers[randi() % trailers.size()]
	return name

static func name_hint(effect, skill, target) -> NameHint:
	var hint = NameHint.new()
	hint.effect_hint = effect
	hint.skill_kind_hint = skill
	hint.target_hint = target
	return hint
